"use strict";(self.webpackChunkutn_prog_ii=self.webpackChunkutn_prog_ii||[]).push([[5590],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return m}});var t=a(7294);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function o(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?o(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},o=Object.keys(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)a=o[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),s=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(a),m=r,k=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return a?t.createElement(k,i(i({ref:n},p),{},{components:a})):t.createElement(k,i({ref:n},p))}));function m(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=a[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},1742:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var t=a(7462),r=a(3366),o=(a(7294),a(3905)),i=["components"],c={title:"Apuntes - Excepciones",sidebar_label:"Excepciones",slug:"/clases/excepciones/apuntes/excepciones",hide_table_of_contents:!1,hide_title:!1,author:null,authorURL:null},l=void 0,s={unversionedId:"clases/excepciones/Apuntes/excepciones",id:"clases/excepciones/Apuntes/excepciones",isDocsHomePage:!1,title:"Apuntes - Excepciones",description:"\xbfQu\xe9 son las Excepciones?",source:"@site/docs/clases/11-excepciones/Apuntes/00-excepciones.md",sourceDirName:"clases/11-excepciones/Apuntes",slug:"/clases/excepciones/apuntes/excepciones",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/excepciones/apuntes/excepciones",tags:[],version:"current",lastUpdatedBy:"lucasdrodriguez",lastUpdatedAt:1629471201,formattedLastUpdatedAt:"8/20/2021",sidebarPosition:0,frontMatter:{title:"Apuntes - Excepciones",sidebar_label:"Excepciones",slug:"/clases/excepciones/apuntes/excepciones",hide_table_of_contents:!1,hide_title:!1,author:null,authorURL:null}},p=[{value:"\xbfQu\xe9 son las Excepciones?",id:"qu\xe9-son-las-excepciones",children:[]},{value:"Bloque Try-Catch",id:"bloque-try-catch",children:[]},{value:"M\xfaltiples Catch",id:"m\xfaltiples-catch",children:[]},{value:"Catch Gen\xe9rico",id:"catch-gen\xe9rico",children:[]},{value:"Throw",id:"throw",children:[]},{value:"Bloque Finally",id:"bloque-finally",children:[]},{value:"InnerException &gt; sacado de la doc de microsoft REVISAAAAAAAAAAR",id:"innerexception--sacado-de-la-doc-de-microsoft-revisaaaaaaaaaar",children:[]}],u={toc:p};function d(e){var n=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"qu\xe9-son-las-excepciones"},"\xbfQu\xe9 son las Excepciones?"),(0,o.kt)("p",null,"Las excepciones es la manera que tiene C# de controlar la gesti\xf3n de errores. La gesti\xf3n de errores es la t\xe9cnica que permite interceptar con \xe9xito errores esperados o inesperados en tiempo de ejecuci\xf3n."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Cuando se produce un error se ",(0,o.kt)("em",{parentName:"p"},"lanza")," una excepci\xf3n.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"El programa debe construirse utilizando diferentes t\xe9cnicas de gesti\xf3n de errores para ",(0,o.kt)("em",{parentName:"p"},"atrapar")," las excepciones y administrarlas de manera conveniente.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Las excepciones detienen el flujo actual del prograama y si no se hace nada, el programa dejar\xe1 de funcionar. Por ejemplo, si se divide un n\xfamero por cero o cuando un usuario selecciona un archivo que no existe.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Todas las excepciones derivan de la clase ",(0,o.kt)("strong",{parentName:"p"},"Exception"),", que es parte del runtime del lenguaje com\xfan (CLR)."))),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Ventajas")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Los mensajes de error no est\xe1n representados por valores o enumeraciones. Son significativos y descriptivos, que contienen informaci\xf3n espec\xedfica:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Se utilizan clases concretas como ",(0,o.kt)("strong",{parentName:"li"},"OutOfMemoryException")," o, por ejemplo, ",(0,o.kt)("strong",{parentName:"li"},"FileNotFoundException"),", que podr\xeda contener el nombre del archivo no encontrado."))),(0,o.kt)("li",{parentName:"ul"},"Cada clase de excepci\xf3n puede residir dentro de su propio archivo de origen y no est\xe1 vinculadas a las dem\xe1s.")))),(0,o.kt)("h2",{id:"bloque-try-catch"},"Bloque Try-Catch"),(0,o.kt)("p",null,"Los bloques ",(0,o.kt)("strong",{parentName:"p"},"try-catch")," son la soluci\xf3n que nos ofrece la orientaci\xf3n a objetos a los problemas de la gesti\xf3n de errores."),(0,o.kt)("p",null,"La idea consiste en separar f\xedsicamente las instrucciones b\xe1sicas del programa para el flujo de control normal de las instrucciones."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Las partes de c\xf3digo que podr\xedan lanzar excepciones se colocan en un bloque ",(0,o.kt)("strong",{parentName:"li"},"try"),", mientras que el c\xf3digo para el tratamiento de excepciones se ponen en un bloque ",(0,o.kt)("strong",{parentName:"li"},"catch")," aparte.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'    void MetodoExcepcion()\n    {\n        try\n        {\n            Console.WriteLine("Escriba un n\xfamero");\n            int i = int.Parse(Console.ReadLine());\n        }\n        catch (OverflowException e)\n        {\n            Console.WriteLine(e.Message);\n        }  \n    }\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Si se encuentra un bloque ",(0,o.kt)("strong",{parentName:"li"},"catch"),", se considera que la excepci\xf3n fue capturada y se reanuda la ejecuci\xf3n normal desde el cuerpo del bloque ",(0,o.kt)("em",{parentName:"li"},"catch")," (que, en este caso, escribe el mensaje contenido en el objeto excepci\xf3n ",(0,o.kt)("strong",{parentName:"li"},"OverFlowException"),")."),(0,o.kt)("li",{parentName:"ul"},"El uso de los bloques ",(0,o.kt)("strong",{parentName:"li"},"try-catch")," hace que las instrucciones para tratamiento de errores no se mezclen con las instrucciones l\xf3gicas b\xe1sicas, por lo que el programa es m\xe1s f\xe1cil de interpretar.")),(0,o.kt)("h2",{id:"m\xfaltiples-catch"},"M\xfaltiples Catch"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Un bloque de c\xf3digo en una instancia ",(0,o.kt)("strong",{parentName:"li"},"try")," puede contener muchas instrucciones, cada una de las cuales puede producir una o m\xe1s clases diferentes de excepci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"Al haber muchas clases de excepciones distintas, es posible que haya muchos bloques ",(0,o.kt)("strong",{parentName:"li"},"catch")," y que cada uno de ellos capture un tipo espec\xedfico de excepci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"El runtime captura autom\xe1ticamente objetos excepci\xf3n de un tipo concreto en un bloque ",(0,o.kt)("strong",{parentName:"li"},"catch")," para ese tipo.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'    try\n    {\n        Console.WriteLine("Escriba el primer n\xfamero");\n        int i = int.Parse(Console.ReadLine());\n        Console.WriteLine("Escriba el segundo n\xfamero");\n        int j = int.Parse(Console.ReadLine());\n        int k = i / j;\n    }\n    catch (OverflowException e)\n    {\n        Console.WriteLine(e.Message);\n    }\n    catch (DivideByZeroException e)\n    {\n        Console.WriteLine(e.Message);\n    }\n')),(0,o.kt)("h2",{id:"catch-gen\xe9rico"},"Catch Gen\xe9rico"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Un bloque ",(0,o.kt)("strong",{parentName:"li"},"catch")," general (Exception), puede capturar cualquier excepci\xf3n independientemente de su clase y se utiliza con frecuencia para capturar cualquier posible excepci\xf3n que se pudiera producir por la falta de un\ncontrolador adecuado."),(0,o.kt)("li",{parentName:"ul"},"Un bloque ",(0,o.kt)("strong",{parentName:"li"},"try")," no puede tener m\xe1s que un bloque ",(0,o.kt)("strong",{parentName:"li"},"catch general"),"."),(0,o.kt)("li",{parentName:"ul"},"En caso de existir, un bloque catch general debe ser el \xfaltimo bloque catch\nen el programa.")),(0,o.kt)("h2",{id:"throw"},"Throw"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cuando se necesita lanzar una excepci\xf3n, el runtime ejecuta una instrucci\xf3n ",(0,o.kt)("strong",{parentName:"li"},"throw")," y ",(0,o.kt)("em",{parentName:"li"},"lanza")," una excepci\xf3n definida por el sistema."),(0,o.kt)("li",{parentName:"ul"},"Esto interrumpe inmediatamente la secuencia de ejecuci\xf3n normal del programa y transfiere el control al primer bloque ",(0,o.kt)("strong",{parentName:"li"},"catch")," que pueda hacerse cargo de la excepci\xf3n en funci\xf3n de su clase."),(0,o.kt)("li",{parentName:"ul"},"Es posible utilizar la instrucci\xf3n ",(0,o.kt)("strong",{parentName:"li"},"throw")," para lanzar excepciones propias.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'    if (minuto < 1 || minuto >= 60)\n    {\n        string fallo = minuto + "no es un minuto v\xe1lido";\n        throw new TiempoInvalidoException(fallo);\n    }\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Se emplea la instrucci\xf3n throw para lanzar una excepci\xf3n definida por el usuario, TiempoInvalidoException, si el tiempo analizado no es v\xe1lido."),(0,o.kt)("li",{parentName:"ul"},"En general, las excepciones esperan como par\xe1metro una cadena con un mensaje significativo que se puede mostrar o quedar registrado cuando se captura la excepci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"Tambi\xe9n es conveniente lanzar una clase adecuada de excepci\xf3n."),(0,o.kt)("li",{parentName:"ul"},"S\xf3lo es posible lanzar un objeto si el tipo de ese objeto deriva directa o indirectamente de ",(0,o.kt)("em",{parentName:"li"},"System.Exception"),"."),(0,o.kt)("li",{parentName:"ul"},"Se puede utilizar una instrucci\xf3n throw en un bloque catch para volver a lanzar el mismo objeto excepci\xf3n u otro nuevo.")),(0,o.kt)("h2",{id:"bloque-finally"},"Bloque Finally"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"La cl\xe1usula ",(0,o.kt)("strong",{parentName:"li"},"finally")," de C# contiene un conjunto de instrucciones que es necesario ejecutar sea cual sea el flujo de control."),(0,o.kt)("li",{parentName:"ul"},"Las instrucciones del bloque ",(0,o.kt)("strong",{parentName:"li"},"finally")," se ejecutar\xe1n aunque el control abandone un bucle try como resultado de la ejecuci\xf3n normal porque el flujo de control llega al final del bloque try."),(0,o.kt)("li",{parentName:"ul"},"Del mismo modo, tambi\xe9n se ejecutar\xe1n las instrucciones del bloque ",(0,o.kt)("strong",{parentName:"li"},"finally")," si el control abandona un bucle try como resultado de una instrucci\xf3n throw o una instrucci\xf3n de salto como break o continue.")),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"El bloque ",(0,o.kt)("strong",{parentName:"h5"},"finally")," es \xfatil en dos casos:")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},"Evitar la repetici\xf3n de instrucciones."),(0,o.kt)("li",{parentName:"ul"},"Liberar recursos tras el lanzamiento de una excepci\xf3n.")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'    try\n    {\n        // C\xf3digo\n    }\n    catch (OverflowException e)\n    {\n        Console.WriteLine(e.Message);\n    }\n    catch (DivideByZeroException e)\n    {\n        Console.WriteLine(e.Message);\n    }\n    finally\n    {\n        Console.WriteLine("Pulse una tecla para continuar...");\n    }\n')),(0,o.kt)("h2",{id:"innerexception--sacado-de-la-doc-de-microsoft-revisaaaaaaaaaar"},"InnerException > sacado de la doc de microsoft REVISAAAAAAAAAAR"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Una excepci\xf3n que se produce como consecuencia directa de una excepci\xf3n anterior debe incluir una referencia a esta \xfaltima en la propiedad ",(0,o.kt)("strong",{parentName:"p"},"InnerException"),". Esta propiedad devuelve el mismo valor pasado al constructor o una referencia nula")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Esta clase es la clase base para todas las excepciones. Cuando se produce un error, el sistema o la aplicaci\xf3n que se ejecuta actualmente lo notifica iniciando una excepci\xf3n que contiene informaci\xf3n sobre el error. Una vez que se produce una excepci\xf3n, la aplicaci\xf3n o el controlador de excepciones predeterminado las controla"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-csharp"},'   using System;\n\n    class ExceptionTestClass\n    {\n        public static void Main()\n        {\n            int x = 0;\n            try\n            {\n                int y = 100 / x;\n            }\n            catch (ArithmeticException e)\n            {\n                Console.WriteLine($"ArithmeticException Handler: {e}");\n            }\n            catch (Exception e)\n            {\n                Console.WriteLine($"Generic Exception Handler: {e}");\n            }\n        }   \n    }\n\n')),(0,o.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"La excepci\xf3n que resulta de ese c\xf3digo es :")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"ArithmeticException Handler: System.DivideByZeroException: Attempted to divide by zero.\nat ExceptionTestClass.Main()"))))}d.isMDXComponent=!0}}]);