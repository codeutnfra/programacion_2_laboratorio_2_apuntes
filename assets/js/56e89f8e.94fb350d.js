"use strict";(self.webpackChunkutn_prog_ii=self.webpackChunkutn_prog_ii||[]).push([[1772],{3905:function(e,a,n){n.d(a,{Zo:function(){return c},kt:function(){return u}});var o=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);a&&(o=o.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,o,t=function(e,a){if(null==e)return{};var n,o,t={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var s=o.createContext({}),d=function(e){var a=o.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},c=function(e){var a=d(e.components);return o.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return o.createElement(o.Fragment,{},a)}},m=o.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=d(n),u=t,k=m["".concat(s,".").concat(u)]||m[u]||p[u]||r;return n?o.createElement(k,i(i({ref:a},c),{},{components:n})):o.createElement(k,i({ref:a},c))}));function u(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4383:function(e,a,n){n.r(a),n.d(a,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return c},default:function(){return m}});var o=n(7462),t=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_label:"Trabajando con la consola",slug:"/clases/introduccion/apuntes/input-output",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},s=void 0,d={unversionedId:"clases/introduccion/Apuntes/input-output",id:"clases/introduccion/Apuntes/input-output",isDocsHomePage:!1,title:"input-output",description:"Trabajando con la consola",source:"@site/docs/clases/01-introduccion/Apuntes/06-input-output.md",sourceDirName:"clases/01-introduccion/Apuntes",slug:"/clases/introduccion/apuntes/input-output",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/introduccion/apuntes/input-output",version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Trabajando con la consola",slug:"/clases/introduccion/apuntes/input-output",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:"https://github.com/mauricioCerizza"},sidebar:"Clases",previous:{title:"Sentencias de iteraci\xf3n",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/introduccion/apuntes/sentencias-iteracion"},next:{title:"Cuestionario",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/introduccion/apuntes/cuestionario"}},c=[{value:"Trabajando con la consola",id:"trabajando-con-la-consola",children:[]},{value:"Salida de datos por consola",id:"salida-de-datos-por-consola",children:[{value:"Formato compuesto",id:"formato-compuesto",children:[]},{value:"Secuencias de escape",id:"secuencias-de-escape",children:[]}]},{value:"Entrada de datos por consola",id:"entrada-de-datos-por-consola",children:[{value:"Leer una l\xednea de texto",id:"leer-una-l\xednea-de-texto",children:[]},{value:"Leer n\xfameros",id:"leer-n\xfameros",children:[]},{value:"Leer una tecla",id:"leer-una-tecla",children:[]}]},{value:"Modificando la consola",id:"modificando-la-consola",children:[{value:"Limpiar la consola",id:"limpiar-la-consola",children:[]},{value:"Cambiar el color del texto",id:"cambiar-el-color-del-texto",children:[]},{value:"Cambiar el color de fondo del texto",id:"cambiar-el-color-de-fondo-del-texto",children:[]},{value:"Cambiar el t\xedtulo de la consola",id:"cambiar-el-t\xedtulo-de-la-consola",children:[]},{value:"Cerrar la consola",id:"cerrar-la-consola",children:[]},{value:"Emitir un sonido",id:"emitir-un-sonido",children:[]}]}],p={toc:c};function m(e){var a=e.components,n=(0,t.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"trabajando-con-la-consola"},"Trabajando con la consola"),(0,r.kt)("p",null,"Las aplicaciones de consola se basan en texto y corren sobre la l\xednea de comandos. Se suelen utilizar para ejecutar tareas simples y concretas. Entre sus tareas m\xe1s habituales se encuentra escribir y leer datos. "),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Pr\xe1cticamente toda la interacci\xf3n con la consola se logra a trav\xe9s de los m\xe9todos y propiedades de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),". Para m\xe1s informaci\xf3n sobre esta clase visita la ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.console?view=net-5.0"},"documentaci\xf3n oficial"),"."))),(0,r.kt)("h2",{id:"salida-de-datos-por-consola"},"Salida de datos por consola"),(0,r.kt)("p",null,"Para mostrar texto se utilizan los m\xe9todos ",(0,r.kt)("inlineCode",{parentName:"p"},"Write")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"WriteLine")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),", cuya \xfanica diferencia es que el \xfaltimo genera un salto de l\xednea despu\xe9s de imprimir el texto. "),(0,r.kt)("p",null,"Reciben como argumento el texto a mostrar en la consola."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Texto con salto de l\xednea.");\nConsole.Write("Texto sin ");\nConsole.Write("salto de l\xednea.");\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Texto con salto de l\xednea.\nTexto sin salto de l\xednea.\n")),(0,r.kt)("h3",{id:"formato-compuesto"},"Formato compuesto"),(0,r.kt)("p",null,"Ambos m\xe9todos soportan una caracter\xedstica llamada ",(0,r.kt)("strong",{parentName:"p"},"formatos compuestos")," que consisten es una lista de valores y una cadena de formato compuesto. Una ",(0,r.kt)("strong",{parentName:"p"},"cadena de formato compuesto")," est\xe1 formada por texto fijo combinado con ",(0,r.kt)("strong",{parentName:"p"},"marcadores de posici\xf3n")," que corresponden con los elementos de la lista. "),(0,r.kt)("p",null,"El resultado de la operaci\xf3n de formato es una cadena de texto compuesta por el texto fijo combinado con la representaci\xf3n en texto de los objetos de la lista. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string facultad = "UTN Fra";\nstring materia = "Programaci\xf3n II"; \nshort anio = 2021;\nbyte cuatrimestre = 2;\n\nConsole.WriteLine("Estamos en la materia {0} de {1}. Es el a\xf1o {2} y el cuatrimestre {3}.", materia, facultad, anio, cuatrimestre);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Estamos en la materia Programaci\xf3n II de UTN Fra. Es el a\xf1o 2021 y el cuatrimestre 2.\n")),(0,r.kt)("p",null,"Los marcadores de posici\xf3n (",(0,r.kt)("inlineCode",{parentName:"p"},"{0}"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{1}"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{2}"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{3}"),") corresponden a la posici\xf3n de las variables desde el segundo argumento del m\xe9todo en adelante. Es decir, ",(0,r.kt)("inlineCode",{parentName:"p"},"{0}")," corresponde a la representaci\xf3n en texto de ",(0,r.kt)("inlineCode",{parentName:"p"},"facultad"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"{1}")," corresponde a la representaci\xf3n en texto de ",(0,r.kt)("inlineCode",{parentName:"p"},"materia"),", y as\xed sucesivamente. Podemos observar que las posiciones se empiezan a contar partiendo del n\xfamero cero."),(0,r.kt)("p",null,"Si cambiaramos de orden las variables o los marcadores, dar\xeda un resultado completamente distinto. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Estamos en la materia {1} de {0}. Es el a\xf1o {3} y el cuatrimestre {2}.", materia, facultad, anio, cuatrimestre);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Estamos en la materia UTN Fra de Programaci\xf3n II. Es el a\xf1o 2 y el cuatrimestre 2021.\n")),(0,r.kt)("p",null,"En el ejemplo anterior se cambia el n\xfamero de los marcadores, y como representa a las posici\xf3n de las variables podemos observar que nos muestra completamente distinto. Lo mismo sucede en el siguiente ejemplo donde lo que cambia es el orden de la lista de variables. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Estamos en la materia {0} de {1}. Es el a\xf1o {2} y el cuatrimestre {3}.", cuatrimestre, anio, facultad, materia);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Estamos en la materia 2 de 2021. Es el a\xf1o UTN Fra y el cuatrimestre Programaci\xf3n II.\n")),(0,r.kt)("h4",{id:"aplicar-formatos-a-cadenas-de-texto"},"Aplicar formatos a cadenas de texto"),(0,r.kt)("p",null,"A los formatos compuestos de los m\xe9todos de entrada y a cualquier ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," le podemos aplicar formatos especiales o personalizados. "),(0,r.kt)("p",null,"Por ejemplo, si queremos dibujar una tabla con el nombre de distintos productos alineados a la izquierda y dentro de una columna de 10 caracteres, y los precios de cada uno alineados a la derecha con separador de miles, con dos decimales y con una columna de 6 caracteres:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'string placaDeVideo = "Nvidia RTX 3080";\ndecimal precioPlacaVideo = 344663.36M;\nstring procesador = "Ryzen 7 5800x";\ndecimal precioProcesador = 63595M;\n\nConsole.WriteLine("{0,-20} {1,10}", "Producto", "Precio");\nConsole.WriteLine("{0,-20} {1,10:N2}", placaDeVideo, precioPlacaVideo);\nConsole.WriteLine("{0,-20} {1,10:N2}", procesador, precioProcesador);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Producto                 Precio\nNvidia RTX 3080      344.663,36\nRyzen 7 5800x         63.595,00\n")),(0,r.kt)("p",null,"Primero se debe escribir entre llaves la posici\xf3n o \xedndice de la variable que queremos imprimir. ",(0,r.kt)("inlineCode",{parentName:"p"},"{1}")," indica que all\xed se deber\xe1 insertar la representaci\xf3n en texto de la variable que est\xe1 en la segunda posici\xf3n. "),(0,r.kt)("p",null,"Se puede definir el ancho del campo agregando una coma y un valor. Si el valor es positivo la cadena se alinea a la derecha, si es negativo se alinea a la izquierda. ",(0,r.kt)("inlineCode",{parentName:"p"},"{1,10}")," aplica al valor de la variable en la segunda posici\xf3n un ancho de columna de 10 caracteres y alineaci\xf3n a la derecha."),(0,r.kt)("p",null,"Tambi\xe9n se puede aplicar un formato espec\xedfico agregando al marcador el s\xedmbolo de dos puntos ",(0,r.kt)("inlineCode",{parentName:"p"},":")," seguido de la cadena de formato. ",(0,r.kt)("inlineCode",{parentName:"p"},"{1,10:N2}")," aplica al valor del marcador el formato ",(0,r.kt)("inlineCode",{parentName:"p"},"N2")," que representa un n\xfamero con separadores de d\xedgitos y hasta 2 decimales. "),(0,r.kt)("p",null,"Como formula general tenemos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{N[,M][:Formato]}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"N")," ser\xe1 el n\xfamero que representa a la posici\xf3n o \xedndice del par\xe1metro, empezando por cero. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"M")," ser\xe1 el ancho usado para mostrar el par\xe1metro, el cual se rellenar\xe1 con espacios. Si ",(0,r.kt)("inlineCode",{parentName:"li"},"M")," es negativo se justificar\xe1 a la izquierda, si es positivo a la derecha. Es opcional."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Formato")," ser\xe1 una cadena que indicar\xe1 un formato a aplicar sobre ese par\xe1metro. Es opcional.")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Para conocer m\xe1s detalles sobre los tipos de formato aplicables visita la ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/es-es/dotnet/standard/base-types/formatting-types"},"documentaci\xf3n oficial"),". "))),(0,r.kt)("h4",{id:"aplicar-un-formato-num\xe9rico-estandar"},"Aplicar un formato num\xe9rico estandar"),(0,r.kt)("p",null,"\xbfQu\xe9 pasa si quiero mostrar un precio y quiero que los n\xfameros siempre se impriman con 2 decimales y con el signo de la moneda? Cambio la \xfaltima l\xednea y aplico un ",(0,r.kt)("strong",{parentName:"p"},"formato num\xe9rico estandar"),". "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Se ingreso el precio {0:C2}, con IVA incluido suma ${1:C2}", precioSinIva, precioFinal);\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},":C2")," es el formato que se aplica sobre el valor en el marcador ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"C")," se utiliza para formato de monedas y el ",(0,r.kt)("inlineCode",{parentName:"p"},"2")," indica la cantidad de digitos desde el punto decimal que quiero mostrar. "),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio $ 12,00, con IVA incluido suma $ 14,52\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Para conocer todos los formatos num\xe9ricos estandard visita la ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings"},"documentaci\xf3n oficial"),". "))),(0,r.kt)("h4",{id:"aplicar-un-formato-num\xe9rico-personalizado"},"Aplicar un formato num\xe9rico personalizado"),(0,r.kt)("p",null,"Otra forma de hacer lo mismo es con un ",(0,r.kt)("strong",{parentName:"p"},"formato num\xe9rico personalizado")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Se ingreso el precio {0:$#.00}, con IVA incluido suma ${1:$#.00}", precioSinIva, precioFinal);\n')),(0,r.kt)("p",null,"El signo ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," es un literal fijo. ",(0,r.kt)("inlineCode",{parentName:"p"},"#")," representa un digito siempre que exista, de lo contrario muestra un string vac\xedo. ",(0,r.kt)("inlineCode",{parentName:"p"},".")," es el punto decimal. ",(0,r.kt)("inlineCode",{parentName:"p"},"00")," indica hasta dos decimales, y si hay menos o no existen rellena con ceros. "),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio $12,00, con IVA incluido suma $14,52\n")),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Informaci\xf3n")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Para conocer todos los formatos num\xe9ricos personalizados visita la ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-numeric-format-strings"},"documentaci\xf3n oficial"),". "))),(0,r.kt)("h3",{id:"secuencias-de-escape"},"Secuencias de escape"),(0,r.kt)("p",null,"Dentro de los ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," se puede incluir ",(0,r.kt)("strong",{parentName:"p"},"secuencias de escape")," que se utilizan para representar caracteres especiales. Los caracteres de escape vienen acompa\xf1ados con el prefijo ",(0,r.kt)("inlineCode",{parentName:"p"},"\\")," (contra barra)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Secuencia de escape"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Descripci\xf3n"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"\\'")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Comilla simple")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'\\"')),(0,r.kt)("td",{parentName:"tr",align:"left"},"Comilla doble")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"\\\\")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Contra barra")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"\\n")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Nueva l\xednea / Salto de l\xednea")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"\\t")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Tabulaci\xf3n horizontal")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Texto con salto de l\xednea.\\n")\nConsole.WriteLine("\\tTexto tabulado horizontalmente.");\nConsole.WriteLine("Pongo \\"comillas dobles\\" a mi texto y tambi\xe9n \\\'comillas simples\\\'.");\nConsole.WriteLine("Para trabajar con caracteres especiales hay que usar \\\\.");\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Texto con salto de l\xednea.\n\n        Texto tabulado horizontalmente.\nPongo \"comillas dobles\" a mi texto y tambi\xe9n 'comillas simples'.\nPara trabajar con caracteres especiales hay que usar \\.\n")),(0,r.kt)("p",null,"Existe una forma de escapar todos los caracteres especiales de un texto con el prefijo ",(0,r.kt)("inlineCode",{parentName:"p"},"@"),", que tambi\xe9n sirve para trabajar con texto multi-l\xednea.   "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine(@"La ruta al archivo es: C:\\\\usuario\\documentos\\texto.txt");\nConsole.WriteLine(@"\nUn texto\nen m\xe1s de una l\xednea\nes posible con C#\nanteponiendo @ al literal de string.\n");\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"La ruta al archivo es: C:\\\\usuario\\documentos\\texto.txt\n\nUn texto\nen m\xe1s de una l\xednea\nes posible con C#\nanteponiendo @ al literal de string.\n")),(0,r.kt)("h2",{id:"entrada-de-datos-por-consola"},"Entrada de datos por consola"),(0,r.kt)("h3",{id:"leer-una-l\xednea-de-texto"},"Leer una l\xednea de texto"),(0,r.kt)("p",null,"Para tomar un dato ingresado por el usuario se usa el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadLine")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),". "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Write("Ingrese una fruta: ");\nstring fruta = Console.ReadLine();\n\nConsole.WriteLine("Se ingreso la fruta {0}", fruta);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ingrese una fruta: Banana\nSe ingreso la fruta Banana\n")),(0,r.kt)("h3",{id:"leer-n\xfameros"},"Leer n\xfameros"),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadLine")," devuelve siempre un ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),". Si trabajamos con n\xfameros tendremos que convertirlos a un tipo num\xe9rico. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Write("Ingrese un precio: ");\nstring precioIngresado = Console.ReadLine();\n\ndecimal precioSinIva = decimal.Parse(precioIngresado);\n\ndecimal precioFinal = precioSinIva + precioSinIva * 0.21M; \n\nConsole.WriteLine("Se ingreso el precio ${0}, con IVA incluido suma ${1}", precioSinIva, precioFinal);\n')),(0,r.kt)("p",null,"La salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Ingrese un precio: 12\nSe ingreso el precio 12, con IVA incluido suma 14,52\n")),(0,r.kt)("h3",{id:"leer-una-tecla"},"Leer una tecla"),(0,r.kt)("p",null,"Para obtener la tecla presionada por el usuario se utiliza ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadKey")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),". Este m\xe9todo espera a que el usuario presione una tecla o combinaci\xf3n de teclas y retorna un objeto de tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsoleKeyInfo"),"."),(0,r.kt)("p",null,"A partir de la variable donde almacenamos el objeto de tipo ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsoleKeyInfo")," podremos acceder a las siguientes propiedades:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Key"),": retorna un objeto de tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"ConsoleKey")," que representa a la tecla presionada. "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KeyChar"),": retorna como tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"char")," el caracter relacionado a la tecla presionada (siempre que exista, de lo contrario retorna espacio vac\xedo)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Modifiers"),": retorna un objeto de tipo ",(0,r.kt)("inlineCode",{parentName:"li"},"ConsoleModifiers")," que representa a los modificadores que se hayan aplicado en la combinaci\xf3n de teclas. Ejemplos de modificadores son ",(0,r.kt)("inlineCode",{parentName:"li"},"SHIFT"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"CTRL"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ALT"),", etc.  ")),(0,r.kt)("p",null,"Si presionamos, por ejemplo, la tecla ",(0,r.kt)("inlineCode",{parentName:"p"},"M")," se imprimir\xe1 el caracter en la consola. Si al m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"ReadKey")," le pasamos como argumento ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," interceptar\xe1 el caracter presionado y no lo mostar\xe1. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.WriteLine("Presione una tecla o combinaci\xf3n de teclas:");\n\nConsoleKeyInfo teclaPresionada = Console.ReadKey(true);\n\nConsoleKey tecla = teclaPresionada.Key;\nchar caracter = teclaPresionada.KeyChar;\nConsoleModifiers modificadores = teclaPresionada.Modifiers;\n\nConsole.WriteLine("Tecla: {0}. Caracter: {1}. Modificadores: {2}", tecla, caracter, modificadores);\n')),(0,r.kt)("p",null,"Al presionar la tecla ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", la salida del c\xf3digo anterior es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Tecla: M. Caracter: m. Modificadores: 0\n")),(0,r.kt)("p",null,"Si presionamos simult\xe1neamente la tecla ",(0,r.kt)("inlineCode",{parentName:"p"},"Shift")," y la tecla ",(0,r.kt)("inlineCode",{parentName:"p"},"M"),", la salida ser\xe1:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Tecla: M. Caracter: M. Modificadores: Shift\n")),(0,r.kt)("h2",{id:"modificando-la-consola"},"Modificando la consola"),(0,r.kt)("p",null,"La clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console")," tiene propiedades que nos permiten modificar c\xf3mo se mostrar\xe1 la salida de texto. "),(0,r.kt)("h3",{id:"limpiar-la-consola"},"Limpiar la consola"),(0,r.kt)("p",null,"Para borrar el contenido de la consola se puede utilizar el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"Clear")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"Console.Clear();\n")),(0,r.kt)("h3",{id:"cambiar-el-color-del-texto"},"Cambiar el color del texto"),(0,r.kt)("p",null,"Para cambiar el color del texto, se tiene que asignar un nuevo valor a la propiedad ",(0,r.kt)("inlineCode",{parentName:"p"},"ForegroundColor")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),". Cada color es representado por un n\xfamero. Para ayudarnos existe el enumerado ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsoleColor")," que contiene estos n\xfameros representados por nombres descriptivos. "),(0,r.kt)("p",null,"Por ejemplo, para cambiar el color del texto a rojo se deber\xe1 escribir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"Console.ForegroundColor = ConsoleColor.Red;\n")),(0,r.kt)("h3",{id:"cambiar-el-color-de-fondo-del-texto"},"Cambiar el color de fondo del texto"),(0,r.kt)("p",null,"Para cambiar el color de fondo del texto, se tiene que asignar un nuevo valor a la propiedad ",(0,r.kt)("inlineCode",{parentName:"p"},"BackgroundColor")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),". Tambi\xe9n usaremos el enumerado ",(0,r.kt)("inlineCode",{parentName:"p"},"ConsoleColor")," para obtener el c\xf3digo del color. "),(0,r.kt)("p",null,"Por ejemplo, para cambiar el color de fondo del texto a azul se deber\xe1 escribir:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"Console.BackgroundColor = ConsoleColor.Blue;\n")),(0,r.kt)("h3",{id:"cambiar-el-t\xedtulo-de-la-consola"},"Cambiar el t\xedtulo de la consola"),(0,r.kt)("p",null,"Para cambiar el t\xedtulo que se muestra en la ventana de la consola se debe asignar el nuevo texto a la propiedad ",(0,r.kt)("inlineCode",{parentName:"p"},"Title")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},'Console.Title = "Mi primer programa en C#";\n')),(0,r.kt)("h3",{id:"cerrar-la-consola"},"Cerrar la consola"),(0,r.kt)("p",null,"Para cerrar la consola se utiliza el m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"Exit")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Environment"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"Environment.Exit(0);\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Exit")," recibe como argumento un c\xf3digo de salida. El c\xf3digo ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," se utiliza para indicar que el proceso finaliz\xf3 correctamente, otros n\xfameros se pueden usar para se\xf1alizar errores de ejecuci\xf3n. "),(0,r.kt)("h3",{id:"emitir-un-sonido"},"Emitir un sonido"),(0,r.kt)("p",null,"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"Beep")," de la clase ",(0,r.kt)("inlineCode",{parentName:"p"},"Console")," nos permite emitir un sonido a trav\xe9s del altavoz de la consola. Opcionalmente, se le puede pasar como argumentos la frecuencia del sonido en hertz y la duraci\xf3n en milisegundos. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"Console.Beep(); // Sonido por defecto.\n\nConsole.Beep(1000, 1500); // Sonido de 1000hz durante 1 segundo y medio. \n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Advertencia")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"El m\xe9todo ",(0,r.kt)("inlineCode",{parentName:"p"},"Beep")," no funciona en todas las plataformas."))))}m.isMDXComponent=!0}}]);