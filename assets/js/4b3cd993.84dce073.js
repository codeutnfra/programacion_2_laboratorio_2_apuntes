"use strict";(self.webpackChunkutn_prog_ii=self.webpackChunkutn_prog_ii||[]).push([[248],{3905:function(e,a,n){n.d(a,{Zo:function(){return d},kt:function(){return m}});var t=n(67294);function o(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function l(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){o(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,t,o=function(e,a){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=t.createContext({}),c=function(e){var a=t.useContext(i),n=a;return e&&(n="function"==typeof e?e(a):l(l({},a),e)),n},d=function(e){var a=c(e.components);return t.createElement(i.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},p=t.forwardRef((function(e,a){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,N=p["".concat(i,".").concat(m)]||p[m]||u[m]||r;return n?t.createElement(N,l(l({ref:a},d),{},{components:n})):t.createElement(N,l({ref:a},d))}));function m(e,a){var n=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=p;var s={};for(var i in a)hasOwnProperty.call(a,i)&&(s[i]=a[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<r;c++)l[c]=n[c];return t.createElement.apply(null,l)}return t.createElement.apply(null,n)}p.displayName="MDXCreateElement"},23365:function(e,a,n){n.r(a),n.d(a,{assets:function(){return d},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var t=n(87462),o=n(63366),r=(n(67294),n(3905)),l=["components"],s={sidebar_label:"DML - Data Manipulation Language",slug:"/clases/sql/apuntes/dml",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:null},i=void 0,c={unversionedId:"clases/sql/Apuntes/dml",id:"clases/sql/Apuntes/dml",title:"dml",description:"Realizar consultas: Comando SELECT",source:"@site/docs/clases/16-sql/Apuntes/02-dml.md",sourceDirName:"clases/16-sql/Apuntes",slug:"/clases/sql/apuntes/dml",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/sql/apuntes/dml",draft:!1,tags:[],version:"current",lastUpdatedBy:"unknown",lastUpdatedAt:1666830549,formattedLastUpdatedAt:"10/26/2022",sidebarPosition:2,frontMatter:{sidebar_label:"DML - Data Manipulation Language",slug:"/clases/sql/apuntes/dml",hide_table_of_contents:!1,hide_title:!0,author:"Mauricio Cerizza",authorURL:null},sidebar:"Clases",previous:{title:"Lenguaje de consultas SQL",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/sql/apuntes/sql"},next:{title:"Cuestionario",permalink:"/programacion_2_laboratorio_2_apuntes/docs/clases/sql/apuntes/cuestionario"}},d={},u=[{value:"Realizar consultas: Comando <code>SELECT</code>",id:"realizar-consultas-comando-select",level:2},{value:"Mostrar todo el contenido de una tabla",id:"mostrar-todo-el-contenido-de-una-tabla",level:3},{value:"Mostrar algunos campos de una tabla",id:"mostrar-algunos-campos-de-una-tabla",level:3},{value:"WHERE",id:"where",level:3},{value:"Operadores de Comparaci\xf3n",id:"operadores-de-comparaci\xf3n",level:4},{value:"Operadores L\xf3gicos",id:"operadores-l\xf3gicos",level:4},{value:"Operadores BETWEEN / NOT BETWEEN",id:"operadores-between--not-between",level:3},{value:"Operadores LIKE / NOT LIKE",id:"operadores-like--not-like",level:3},{value:"Crear registros: Comando <code>INSERT</code>",id:"crear-registros-comando-insert",level:2},{value:"Valores NULL",id:"valores-null",level:3},{value:"Modificar registros: Comando <code>UPDATE</code>",id:"modificar-registros-comando-update",level:2},{value:"Actualizaciones selectivas",id:"actualizaciones-selectivas",level:3},{value:"Eliminar registros: Comando <code>DELETE</code>",id:"eliminar-registros-comando-delete",level:2},{value:"TRUNCATE TABLE",id:"truncate-table",level:3},{value:"Consultas avanzadas",id:"consultas-avanzadas",level:2}],p={toc:u};function m(e){var a=e.components,n=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,t.Z)({},p,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"realizar-consultas-comando-select"},"Realizar consultas: Comando ",(0,r.kt)("inlineCode",{parentName:"h2"},"SELECT")),(0,r.kt)("p",null,"Permite realizar operaciones de selecci\xf3n, ordenaci\xf3n, agrupaci\xf3n y filtrado de registros. Esta instrucci\xf3n o sentencia utiliza diversas cl\xe1usulas: "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"FROM")," Especifica la tabla de la que se quieren obtener los registros."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WHERE")," Especifica los criterios o condiciones que deben cumplir los registros a buscar dentro de la tabla."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ORDER BY")," Ordena los registros seleccionados en funci\xf3n de un campo."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GROUP BY")," Permite agrupar los registros seleccionados en funci\xf3n de uno o m\xe1s campos."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HAVING")," Especifica una condici\xf3n de b\xfasqueda para un grupo."),(0,r.kt)("h3",{id:"mostrar-todo-el-contenido-de-una-tabla"},"Mostrar todo el contenido de una tabla"),(0,r.kt)("p",null,"La siguiente sentencia selcciona  todos los registros contenidos en la tabla ",(0,r.kt)("inlineCode",{parentName:"p"},"Articulos")," y se muestran todas las columnas:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM Articulos\n")),(0,r.kt)("p",null,"El asterisco (*) ubicado a continuaci\xf3n de la sentencia ",(0,r.kt)("inlineCode",{parentName:"p"},"SELECT")," especifica qu\xe9, en el resultado de la consulta, se deben mostrar todas las columnas (campos) contenidos en la tabla."),(0,r.kt)("h3",{id:"mostrar-algunos-campos-de-una-tabla"},"Mostrar algunos campos de una tabla"),(0,r.kt)("p",null,"Se selecciona los valores de la columna Nombre, de todos los registros de la tabla Articulos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre FROM Articulos\n")),(0,r.kt)("p",null,"Se selecciona todos los valores de las columnas Nombre y Precio de la tabla Articulos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre, Precio FROM Articulos\n")),(0,r.kt)("h3",{id:"where"},"WHERE"),(0,r.kt)("p",null,"La cl\xe1usula ",(0,r.kt)("em",{parentName:"p"},"WHERE")," se utiliza cuando se desea recuperar informaci\xf3n espec\xedfica de una tabla sin incluir otros datos irrelevantes. Podemos utilizar para restringir los datos que se recuperan. La condici\xf3n proporcionada en la cl\xe1usula WHERE filtra las filas recuperadas y devuelve s\xf3lo las filas esperadas. La cl\xe1usula WHERE se puede utilizar junto con SELECT, DELETE, UPDATE. "),(0,r.kt)("h4",{id:"operadores-de-comparaci\xf3n"},"Operadores de Comparaci\xf3n"),(0,r.kt)("p",null,"Asociado a la cl\xe1usula WHERE se agregan los operadores de comparaci\xf3n: "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Operador"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"=")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Igual a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"<")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Menor a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},">")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Mayor a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},">=")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Mayor o igual a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"<=")),(0,r.kt)("td",{parentName:"tr",align:"center"},"Menor o igual a")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"<>")),(0,r.kt)("td",{parentName:"tr",align:"center"},"No es igual a")))),(0,r.kt)("p",null,"Se selecciona de la tabla Articulos la columna Nombre y muestra todos aquellos registros cuyo valor en la columna C\xf3digo sea igual a 1:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre FROM Articulos WHERE Codigo = 1\n")),(0,r.kt)("p",null,"Se selecciona de la tabla Articulos las columnas Nombre y Precio y muestra todos aquellos registros cuyo precio sea mayor a 150:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre, Precio FROM Articulos WHERE Precio > 150\n")),(0,r.kt)("h4",{id:"operadores-l\xf3gicos"},"Operadores L\xf3gicos"),(0,r.kt)("p",null,"Para crear expresiones l\xf3gicas disponemos de varios operadores de comparaci\xf3n."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Operador"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"AND"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Se debe cumplir todas las condiciones especificadas")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"OR"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Se debe cumplir al menos una de las conduiciones")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"NOT"),(0,r.kt)("td",{parentName:"tr",align:"center"},"No debe cumplir las condiciones especificadas")))),(0,r.kt)("p",null,"Si uno o los dos valores a comparar son NULL, el resultado es NULL. (Excepto con el operador ",(0,r.kt)("inlineCode",{parentName:"p"},"<=>")," que es usado para una comparaci\xf3n con NULL segura). "),(0,r.kt)("p",null,"El operador ",(0,r.kt)("inlineCode",{parentName:"p"},"<=>")," funciona igual que el operador ",(0,r.kt)("inlineCode",{parentName:"p"},"="),". Salvo que, si en la comparaci\xf3n una o ambas de las expresiones es nula, el resultado no es NULL. Si se comparan dos expresiones nulas, el resultado es verdadero."),(0,r.kt)("p",null,"Se selecciona de la tabla Articulos todos aquellos registros cuyo precio tenga un valor mayor o igual a 500, o su stock sea mayor o igual a 100:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre, Precio \nFROM Articulos \nWHERE Precio >= 500 OR Stock >= 100\n")),(0,r.kt)("h3",{id:"operadores-between--not-between"},"Operadores BETWEEN / NOT BETWEEN"),(0,r.kt)("p",null,"Especifica un intervalo. La cl\xe1usula BETWEEN especifica un rango de b\xfasqueda. NOT BETWEEN especifica el rando para el cual no queremos los datos. Para indicar que deseamos recuperar los registros seg\xfan el intervalo de valores de un campo. La sintaxis es la siguiente: "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"BETWEEN m\xednimo AND m\xe1ximo:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre, Precio \nFROM Articulos \nWHERE Precio BETWEEN 100 AND 200\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NOT BETWEEN m\xednimo AND m\xe1ximo:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Nombre, Precio \nFROM Articulos \nWHERE Precio NOT BETWEEN 100 AND 200\n")),(0,r.kt)("h3",{id:"operadores-like--not-like"},"Operadores LIKE / NOT LIKE"),(0,r.kt)("p",null,"El operador LIKE se usa para hacer comparaciones entre cadenas y patrones. El resultado es verdadero  si la cadena se ajusta al patr\xf3n o falso en caso contrario. "),(0,r.kt)("p",null,"Tanto si la cadena como el patr\xf3n son NULL, el resultado es NULL."),(0,r.kt)("p",null,"Para definir estos patrones, se hace uso de ",(0,r.kt)("em",{parentName:"p"},"comodines"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Operador"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Descripcion"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"%"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Coincidencia con ",(0,r.kt)("em",{parentName:"td"},"cualquier")," n\xfamero de caracteres, incluso ninguno")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"_"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Coincidencia con un \xfanico caracter")))),(0,r.kt)("p",null,"Se muestra de la tabla Articulos todos aquellos registros que en el campo nombre, figure la palabra Pala:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM Articulos \nWHERE Nombre LIKE '%Pala%'\n")),(0,r.kt)("h2",{id:"crear-registros-comando-insert"},"Crear registros: Comando ",(0,r.kt)("inlineCode",{parentName:"h2"},"INSERT")),(0,r.kt)("p",null,"Para insertar datos en una tabla utilizamos la sentencia INSERT. Con ella, podemos a\xf1adir registros uno a uno, o a\xf1adir tantos registros como deseemos, en una sola sentencia. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO Productos\nVALUES ('iPhone 5', 499.99, 'Apple')\n")),(0,r.kt)("p",null,"Se insertan los valores especificados despues de la palabra VALUES en cada uno de los campos. ",(0,r.kt)("em",{parentName:"p"},"Es muy importante respetar el orden")," los datos se deben especificar en el mismo orden en que figuran las columnas en la tabla y respetar los tipos de dato de cada columna. "),(0,r.kt)("h3",{id:"valores-null"},"Valores NULL"),(0,r.kt)("p",null,'La expresi\xf3n NULL significa "dato desconocido" o "valor inexistente". No es lo mismo que un valor 0 en un campo num\xe9rico, o una cadena vac\xeda, o una cadena de texto con la palabra NULL literal en un campo de tipo texto. A veces, puede desconocerse o no existir el dato correspondiente a alg\xfan campo de un registro. En estos casos, se dice que el campo puede contener valores nulos.\nPor ejemplo, en una tabla con el nombre Productos, se puede tener valores nulos en el campo precio, en el caso de que, para algunos productos, no se haya establecido el precio para la venta.\nEn contraposici\xf3n, una tabla puede contener campos que no pueden quedar vac\xedos, como los campos que identifican cada registro (c\xf3digos de identificaci\xf3n), que son clave primaria.\nPor defecto (si no lo aclaramos en la creaci\xf3n de la tabla) los campos permiten valores nulos.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"INSERT INTO Productos\nVALUES ('iPhone 5', 499.99, NULL )\n")),(0,r.kt)("p",null,'En el ejemplo anterior podemos ver que para el campo Precio, el valor NULL no es una cadena de caracteres, por lo que no se coloca entre comillas. Si un campo acepta valores nulos, podemos ingresar NULL cuando no conocemos el valor.\nAdem\xe1s, si una columna fue definida como no obligatoria cuando creamos nuestra tabla, puede no incluirse en el listado de campos (puede entenderse como que el campo "no es obligatorio" de asignar un valor) y eso se rellenara con NULL.'),(0,r.kt)("h2",{id:"modificar-registros-comando-update"},"Modificar registros: Comando ",(0,r.kt)("inlineCode",{parentName:"h2"},"UPDATE")),(0,r.kt)("p",null,"Podemos modificar registros de una tabla utilizando la sentencia UPDATE. La sintaxis gen\xe9rica del comando UPDATE para actualizar un registro existente es:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Tabla \nSET Campo1 = Valor1 \nWHERE Campo = 'Valor'\n")),(0,r.kt)("p",null,"Es posible, del mismo modo, actualizar el valor de m\xe1s de una columna separ\xe1ndolas en la secci\xf3n SET mediante comas como delimitador:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Tabla \nSET Campo1 = Valor1, Cmapo2 = Valor2, \nWHERE Campo = 'Valor'\n")),(0,r.kt)("h3",{id:"actualizaciones-selectivas"},"Actualizaciones selectivas"),(0,r.kt)("p",null,"Mediante la cl\xe1usula WHERE se puede establecer una condici\xf3n; de esta manera, s\xf3lo las filas/registros que cumplan esa condici\xf3n ser\xe1n actualizadas. Ejemplos:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Articulos \nSET Nombre = `Pala Ancha` \nWHERE Nombre = 'Pala'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Articulos \nSET Precio = 499.99 \nWHERE Nombre = 'Pala'\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"UPDATE Articulos \nSET Precio = 499.99 \nWHERE Nombre <> 'Pala'\n")),(0,r.kt)("h2",{id:"eliminar-registros-comando-delete"},"Eliminar registros: Comando ",(0,r.kt)("inlineCode",{parentName:"h2"},"DELETE")),(0,r.kt)("p",null,"Para eliminar registros de una tabla, se utiliza la sentencia DELETE. Al hacerlo, se deber\xe1 especificar la condici\xf3n que deben cumplir los registros de la tabla a eliminar. En el ejemplo se eliminar\xedan de la tabla Productos todas aquellas filas/registros donde el campo idProducto contenga el valor 1."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"DELETE Productos \nWHERE idProducto = 1\n")),(0,r.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Si no especificas ninguna condici\xf3n a trav\xe9s de una cl\xe1usula WHERE, se eliminar\xe1n todos los registros de la tabla sin ninguna limitaci\xf3n (es decir, la tabla quedar\xe1 vac\xeda)."))),(0,r.kt)("h3",{id:"truncate-table"},"TRUNCATE TABLE"),(0,r.kt)("p",null,"La sentencia DELETE se puede utilizar para eliminar todos los registros de una tabla, pero tiene la desventaja de no ser tan eficiente, ya que, por ejemplo (entre otras limitaciones), no resetea los valores de los campos AUTO_INCREMENT.\nPor este motivo, si se opta por vaciar completamente la tabla, es recomendable utilizar la sentencia TRUNCATE TABLE, la cual elimina los registros en su totalidad y deja vac\xeda la tabla, de manera menos costosa (en t\xe9rminos de rendimiento) para el servidor de base de datos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"TRUNCATE TABLE Productos \n")),(0,r.kt)("h2",{id:"consultas-avanzadas"},"Consultas avanzadas"))}m.isMDXComponent=!0}}]);